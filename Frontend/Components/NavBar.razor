@inject NavigationManager _navigationManager;
@inject IJSRuntime _iJSRuntime;

<head>
    <link rel="stylesheet" href="css/Nav.css">
</head>
<div class="Nav_bar_component">
<nav style="background-color: @(isBackground ? "var(--primary_color)" : "rgba(30, 30, 30, 0.34)")">
    <div class="company_logo"><span>FunOlympics</span></div>
    <ul class="nav_menu">
        @if(navBarITems!=null)
        {
            @foreach(NavBarITem nav_item in navBarITems)
            {
            <li style="color: @(nav_item.navItemUrl==@active_link ? "var(--secondary_color)" : "white")" class="d-flex" @onclick="()=>gotoPage(nav_item)" ><span class="material-icons">@nav_item.icon</span> @nav_item.navItemName</li>
            }

        }else
        {
            <p>Loading navigation Bar</p>

        }
    </ul>
    <span class="material-icons menu_icon" @onclick="ToggleMenu">menu</span>
</nav>
<div class="emptyDiv"></div>
</div>
@code
{
    
    public List<NavBarITem> navBarITems;
    [Parameter]
    public Boolean isBackground {get;set;}
    public String active_link {get;set;}

        protected override void OnInitialized()
        {

        string fullPath = _navigationManager.Uri;

        string basePath = _navigationManager.BaseUri;

         active_link = "/"+fullPath.Substring(basePath.Length);
            
            navBarITems = new ()
            {
                new NavBarITem()
                {
                    navItemName="Home",
                    navItemUrl="/",
                    icon="home"
                },
                   new NavBarITem()
                {
                    navItemName="About",
                    navItemUrl="/about_us",
                    icon="info"
                },
                   new NavBarITem()
                {
                    navItemName="Events",
                    navItemUrl="/events",
                    icon="brush"
                },
                   new NavBarITem()
                {
                    navItemName="Account",
                    navItemUrl="/profile",
                    icon="person"
                }

            };
            
        }

    public void gotoPage(NavBarITem navItem)
    {
        _navigationManager.NavigateTo(navItem.navItemUrl);
        Console.WriteLine("Navigation bar clicked");

    }
    public void ToggleMenu()
    {
        _iJSRuntime.InvokeVoidAsync("toogle_menu");
    }
}