@page "/pastevents"
@inject DummyDataService _dummyDataService;

<style>
    .events_container
    {
 background-color: var(--primary_color);
    padding: 20px;
    }
    .events_container h1{
        color: #fff;
        font-weight: bold;
        color: var(--secondary_color);
    }
    .events-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
   
}

.event-card {
    border: 1px solid #ccc;
    border-radius: 5px;
    overflow: hidden;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    background-color: #ffffffa2;
}

.event-card img {
    width: 100%;
    height: auto;
    display: block;
}

.event-details {
    padding: 20px;
}

.event-details h2 {
    margin-top: 0;
    font-size: medium;
    text-align: center;
    font-weight: bold;
    color: var(--secondary_color);
}

.event-details p {
    margin: 5px 0;
}

</style>

<div class="events_container">
<h1>Past Events</h1>
<div class="events-grid">
    @if (Past_events != null)
    {
        @foreach (var eventItem in Past_events)
        {
            <div class="event-card">
                <img src="@eventItem.EventImageUrl" alt="@eventItem.EventName" />
                <div class="event-details">
                    <h2>@eventItem.EventName</h2>
                    <p>@eventItem.PlayerName</p>
                    <p>@eventItem.EventDate.ToShortDateString()</p>
                    <p>@eventItem.EventVenue</p>
                    <p>@eventItem.EventDescription</p>
                </div>
            </div>
        }
    }
    else
    {
        <p>Loading...</p>
    }
</div>
</div>

@code {
    List<EventModel> Past_events;

    protected override async Task OnInitializedAsync()
    {
        Past_events = await _dummyDataService.GetPastEvents();
        Console.WriteLine(Past_events.Count);
    }
}
